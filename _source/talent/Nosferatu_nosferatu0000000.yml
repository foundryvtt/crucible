folder: fOYHlZJEWUukD7yr
name: Nosferatu
type: talent
img: icons/magic/death/mouth-bite-fangs-vampire.webp
system:
  node: sig3.dexterity.toughness
  description: >-
    <p>You are afflicted with a rare blood mutation which allows your wounds to
    rapidly heal through hematophagy.</p><p>You can restore your Health by
    biting a living target. This attack is made with a Superior Natural weapon
    which scales using Strength and deals Piercing damage.</p><p>Your
    vulnerability to Radiant damage increases by 10.</p>
  actions:
    - id: vampiricBite
      name: Vampiric Bite
      condition: Your target is a living creature.
      description: >-
        You grasp an enemy and bite it with sharp incisors, rapidly draining its
        blood to heal your own wounds. This attack requires a free hand to grasp
        your target while you feed.
      tags:
        - melee
        - freehand
      cost:
        action: 1
        focus: 1
      target:
        type: single
        number: 1
        distance: 1
        scope: 0
      effects: []
      img: icons/magic/death/mouth-bite-fangs-vampire.webp
      actionHooks:
        - hook: prepare
          fn: >-
            const cls = getDocumentClass("Item");

            const bite = new cls(SYSTEM.WEAPON.VAMPIRE_BITE, {parent:
            this.actor});

            this.usage.weapon = bite;

            this.usage.context.tags.add("Vampiric Bite");

            foundry.utils.mergeObject(this.usage.bonuses,
            bite.system.actionBonuses);

            foundry.utils.mergeObject(this.usage.context, {
              type: "weapons",
              label: "Weapon Tags",
              icon: "fa-solid fa-swords",
              hasDice: true
            });
        - hook: roll
          fn: |-
            const bite = await this.actor.weaponAttack(this, target);
            rolls.push(bite);
        - hook: confirm
          fn: |-
            const self = this.outcomes.get(this.actor);
            for ( const outcome of this.outcomes.values() ) {
              if ( outcome === self ) continue;
              if ( outcome.rolls.some(r => r.isSuccess) ) {
                self.resources.health = (self.resources.health || 0) + this.actor.system.abilities.toughness.value;
              }
            }
  actorHooks:
    - hook: prepareResistances
      fn: resistances.radiant.base -= 10;
effects: []
ownership:
  default: 0
  AnoypGxxNIMOS0XY: 3
flags:
  core: {}
_stats:
  systemId: crucible
  systemVersion: 0.6.0
  coreVersion: '13.338'
  createdTime: 1676157758719
  modifiedTime: 1726783512928
  lastModifiedBy: AnoypGxxNIMOS0XY
  compendiumSource: Item.nosferatu0000000
  duplicateSource: null
  exportSource: null
_id: nosferatu0000000
sort: 325000
_key: '!items!nosferatu0000000'

